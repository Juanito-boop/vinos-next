{
  "app": {
    "api": {
      "vinos": {
        "route.ts": "// /app/api/vinos/route.ts\n\nimport { supabase } from \"@/app/supabase\";\nimport { NextResponse } from \"next/server\";\n\nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  console.log(searchParams);\n  const variedades = searchParams.get(\"variedades\")?.split(\",\") || [];\n  console.log(variedades);\n\n  let query = supabase\n    .from(\"vinos\")\n    .select(\n      `id, nombre, precio, variedad, id_unica, url_imagen, variedades(variedad), paises(pais)`\n    );\n\n  if (variedades.length > 0) {\n    query = query.in(\"variedades.variedad\", variedades);\n  }\n\n  const { data: vinos, error: errorVinos } = await query;\n  const { data: variedadesData, error: errorVariedades } = await supabase\n    .from(\"variedades\")\n    .select(`id, variedad`);\n\n  if (errorVinos || errorVariedades) {\n    return NextResponse.json(\n      { error: errorVinos || errorVariedades },\n      { status: 500 }\n    );\n  }\n\n  return NextResponse.json({\n    vinos: vinos,\n    variedades: variedadesData,\n  });\n}\n"
      }
    },
    "home": {
      "layout.tsx": "import '@/app/ui/global.css'\n\nexport default function RootLayout({\n\tchildren,\n}: {\n\tchildren: React.ReactNode;\n}) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<body className=\"bg-principalColor2 pb-2.5\">{children}</body>\n\t\t</html>\n\t);\n}",
      "page.tsx": "import MainHeader from \"@/app/ui/home/main-header\";\nimport AsideMainServer from \"@/app/ui/home/servidor/AsideMainServer\";\nimport FilteredCards from \"@/app/ui/home/FilterCardProducts\";\n\nexport default function Page() {\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<section className=\"flex flex-row mx-2.5 gap-2\">\n\t\t\t\t<AsideMainServer />\n\t\t\t\t<FilteredCards />\n\t\t\t</section>\n\t\t</>\n\t);\n}"
    },
    "hooks": {
      "carrito.tsx": "import { useEffect, useState } from \"react\";\nimport { CartItem } from \"@/app/lib/Interfaces\";\n\nconst useCart = () => {\n\tconst [ cartItems, setCartItems ] = useState<CartItem[]>(() => {\n\t\tif (typeof window !== \"undefined\") {\n\t\t\tconst items = JSON.parse(\n\t\t\t\tlocalStorage.getItem(\"cartItems\") || \"[]\"\n\t\t\t).filter(\n\t\t\t\t(item: CartItem) =>\n\t\t\t\t\titem.timestamp &&\n\t\t\t\t\tnew Date().getTime() - item.timestamp < 10 * 24 * 60 * 60 * 1000\n\t\t\t);\n\t\t\treturn items;\n\t\t}\n\t\treturn [];\n\t});\n\n\tuseEffect(() => {\n\t\tconst tenDaysAgo = new Date().getTime() - 10 * 24 * 60 * 60 * 1000;\n\t\tconst filteredItems = cartItems.filter(\n\t\t\t(item) => !item.timestamp || item.timestamp > tenDaysAgo\n\t\t);\n\n\t\tif (filteredItems.length !== cartItems.length) {\n\t\t\tsetCartItems(filteredItems);\n\t\t}\n\n\t\tlocalStorage.setItem(\"cartItems\", JSON.stringify(filteredItems));\n\t}, [cartItems]);\n\n\tconst addToCart = (newItem: CartItem) => {\n\t\tsetCartItems((prevItems) => {\n\t\t\tconst existingItemIndex = prevItems.findIndex(\n\t\t\t\t(item) => item.productId === newItem.productId\n\t\t\t);\n\t\t\tif (existingItemIndex > -1) {\n\t\t\t\tconst updatedItems = [...prevItems];\n\t\t\t\tupdatedItems[existingItemIndex] = {\n\t\t\t\t\t...updatedItems[existingItemIndex],\n\t\t\t\t\tquantity: updatedItems[existingItemIndex].quantity + newItem.quantity,\n\t\t\t\t};\n\t\t\t\treturn updatedItems;\n\t\t\t} else {\n\t\t\t\treturn [...prevItems, { ...newItem, timestamp: new Date().getTime() }];\n\t\t\t}\n\t\t});\n\t};\n\n\tconst removeFromCart = (productId: number) => {\n\t\tsetCartItems((prevItems) =>\n\t\t\tprevItems.filter((item) => item.productId !== productId)\n\t\t);\n\t};\n\n\treturn { cartItems, addToCart, removeFromCart };\n};\n\nexport default useCart;\n"
    },
    "informacion": {
      "[vino]": {
        "page.tsx": "\"use client\";\n\nimport useCart from \"@/app/hooks/carrito\";\nimport { CartItem } from \"@/app/lib/Interfaces\";\nimport { VinosT } from \"@/app/lib/tablas\";\nimport { supabase } from \"@/app/supabase\";\nimport MainHeader from \"@/app/ui/home/main-header\";\nimport ModalCarrito from \"@/app/modales/carrito/ModalCarrito\";\nimport { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"next/navigation\";\n\nexport default function Page({ params }: { params: { vino: string } }) {\n\tconst [ vino, setVino ] = useState<VinosT>({} as VinosT);\n\tconst [ existe, setExiste ] = useState(false);\n\tconst { cartItems, addToCart, removeFromCart } = useCart();\n\tconst [ isModalOpen, setIsModalOpen ] = useState(false);\n\tconst [ contador, setContador ] = useState(1);\n\n\tconst queryParams = useParams();\n\tconst vinoDecoded = decodeURIComponent(params.vino);\n\tconsole.log(vinoDecoded);\n\tconsole.log(queryParams.vino);\n\tconst parts = vinoDecoded.split(\"~\");\n\tconst id_unica: number =\n\t\tparts.length > 0 ? Number(parts.pop()?.trim() ?? 0) : 0;\n\n\tconst incrementar = () => setContador(contador + 1);\n\tconst decrementar = () => {\n\t\tif (contador > 1) {\n\t\t\tsetContador(contador - 1);\n\t\t}\n\t};\n\n\tconst handleOpenModal = () => setIsModalOpen(true);\n\tconst handleCloseModal = useCallback(() => {\n\t\tsetIsModalOpen(false);\n\t}, []);\n\n\tconst handleAddToCart = (vino: VinosT) => {\n\t\taddToCart({\n\t\t\tproductId: vino.id_unica,\n\t\t\tnombre: vino.nombre + \" - \" + vino.variedades?.variedad || vino.tipo,\n\t\t\tquantity: contador,\n\t\t\tprice: vino.precio,\n\t\t});\n\t\tsetExiste(true);\n\t};\n\n\tconst handleRemoveFromCart = (productId: number) => {\n\t\tremoveFromCart(productId);\n\t\tsetExiste(false);\n\t\tsetContador(1);\n\t};\n\n\tconst banderas: { [key: string]: () => JSX.Element | null } = {\n\t\tArgentina: () => <picture>\n\t\t\t<img src=\"/Argentina.svg\" alt=\"Bandera Argentina\" />\n\t\t</picture>,\n\t\tChile: () => <picture>\n\t\t\t<img src=\"/Chile.svg\" alt=\"Bandera Chile\" />\n\t\t</picture>,\n\t\tColombia: () => <picture>\n\t\t\t<img src=\"/Colombia.svg\" alt=\"Bandera Colombia\" />\n\t\t</picture>,\n\t\tEspaña: () => <picture>\n\t\t\t<img src=\"/España.svg\" alt=\"Bandera España\" />\n\t\t</picture>,\n\t\tFrancia: () => <picture>\n\t\t\t<img src=\"/Francia.svg\" alt=\"Bandera Francia\" />\n\t\t</picture>,\n\t\tItalia: () => <picture>\n\t\t\t<img src=\"/Italia.svg\" alt=\"Bandera Italia\" />\n\t\t</picture>,\n\t};\n\n\tconst getBandera = (banderaName: string) => {\n\t\tconst bandera = banderas[banderaName];\n\t\treturn bandera ? bandera() : null;\n\t};\n\n\tconst renderCartButton = (action: any, label: string, imgSrc: string) => (\n\t\t<button\n\t\t\tclassName=\"grid grid-cols-[10%_1fr] gap-3 border border-black w-52 py-2 px-4 rounded-lg my-auto ml-auto bg-white/90\"\n\t\t\tonClick={action}\n\t\t>\n\t\t\t<picture>\n\t\t\t\t<img src={imgSrc} className=\"col-start-1 w-5 h-5 m-auto\" alt=\"cart indicator\" />\n\t\t\t</picture>\n\t\t\t<p className=\"col-start-2 mx-auto\">{label}</p>\n\t\t</button>\n\t);\n\n\tconst InfoRow: ({ title, content }: { title: string; content: string | number }) => JSX.Element = ({ title, content }: { title: string; content: string | number; }) => (\n\t\t<section className=\"grid grid-cols-[25%_1fr] grid-flow-col gap-x-2\">\n\t\t\t<span className=\"col-span-1 text-xl font-bold\">{title}</span>\n\t\t\t<span className=\"col-span-1 text-xl pl-1 pb-1 my-auto\">{content}</span>\n\t\t</section>\n\t);\n\n\tuseEffect(() => {\n\t\tconst fetchVinos = async () => {\n\t\t\tif (id_unica) {\n\t\t\t\tconst { data: vino, error } = await supabase\n\t\t\t\t\t.from(\"vinos\")\n\t\t\t\t\t.select(`*\n\t\t\t\t\t\t,variedades(variedad)\n\t\t\t\t\t\t,paises(pais)\n\t\t\t\t\t`)\n\t\t\t\t\t.eq(\"id_unica\", id_unica);\n\t\t\t\t\tconsole.log(vino);\n\t\t\t\tif (error) {\n\t\t\t\t\tconsole.error(\"Error al obtener los vinos:\", error);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tsetVino(vino[0]);\n\t\t\t}\n\t\t};\n\n\t\tfetchVinos();\n\t}, [id_unica]);\n\n\tuseEffect(() => {\n\t\tconst cartItems: CartItem[] = JSON.parse(\n\t\t\tlocalStorage.getItem(\"cartItems\") || \"[]\"\n\t\t);\n\t\tconst productoEnCarrito = cartItems.some(\n\t\t\t(item) => item.productId === vino?.id_unica\n\t\t);\n\n\t\tsetExiste(productoEnCarrito);\n\t}, [vino]);\n\n\tuseEffect(() => {\n\t\tconst handleEscPress = (event: KeyboardEvent) => {\n\t\t\tif (event.key === \"Escape\" && isModalOpen) {\n\t\t\t\thandleCloseModal();\n\t\t\t}\n\t\t};\n\n\t\tif (isModalOpen) {\n\t\t\tdocument.body.style.overflow = \"hidden\";\n\t\t} else {\n\t\t\tdocument.body.style.overflow = \"unset\";\n\t\t}\n\n\t\tdocument.addEventListener(\"keydown\", handleEscPress);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener(\"keydown\", handleEscPress);\n\t\t\tdocument.body.style.overflow = \"unset\";\n\t\t};\n\t}, [isModalOpen, handleCloseModal]);\n\n\treturn (\n\t\t<>\n\t\t\t<MainHeader />\n\t\t\t<main className=\"mx-2.5 w-auto rounded-xl bg-magenta-500 grid grid-cols-[1fr_7fr_1fr] sticky\">\n\t\t\t\t<aside className=\"col-span-1 flex flex-row justify-center align-top\">\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"border border-principalColor1 rounded-lg p-5 w-20 h-20 my-3 bg-white/90\"\n\t\t\t\t\t\tonClick={handleOpenModal}\n\t\t\t\t\t>\n\t\t\t\t\t\t<picture>\n\t\t\t\t\t\t\t<img src=\"/carrito.svg\" alt=\"\" />\n\t\t\t\t\t\t</picture>\n\t\t\t\t\t</button>\n\t\t\t\t\t{isModalOpen && (\n\t\t\t\t\t\t<ModalCarrito\n\t\t\t\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\t\t\t\tsetIsModalOpen={setIsModalOpen}\n\t\t\t\t\t\t\tcartItems={cartItems}\n\t\t\t\t\t\t/>\n\t\t\t\t\t)}\n\t\t\t\t</aside>\n\t\t\t\t<div className=\"col-start-2\">\n\t\t\t\t\t<div className=\"flex flex-row justify-center h-auto\">\n\t\t\t\t\t\t<div className=\"w-[40%] pb-5 px-2 pt-1 relative\">\n\t\t\t\t\t\t\t<picture>\n\t\t\t\t\t\t\t\t<img src={vino.url_imagen} className=\"mt-3 p-1\" alt=\"\" />\n\t\t\t\t\t\t\t</picture>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"absolute top-0 right-0 mr-5 mt-5\"\n\t\t\t\t\t\t\t\tstyle={{ width: \"64px\", height: \"64px\" }}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{getBandera(vino.paises?.pais || \"\")}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"w-[60%] px-2 pt-1 flex flex-col gap-y-1 pb-5\">\n\t\t\t\t\t\t\t<h1\n\t\t\t\t\t\t\t\tclassName=\"text-4xl mx-3 mt-3 border-b border-black w-auto pb-2 text-center\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{vino.nombre + \" \" + vino.variedades?.variedad || vino.tipo}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<p className=\"text-xl\">{vino.descripcion}</p>\n\t\t\t\t\t\t\t<div className=\"flex flex-row py-2 justify-between\">\n\t\t\t\t\t\t\t\t{/* <span\n\t\t\t\t\t\t\t\t\tclassName=\"text-2xl mx-3 my-auto\"\n\t\t\t\t\t\t\t\t\t{\"$\" + vino.precio + \" COP\"}\n\t\t\t\t\t\t\t\t/> */}\n\t\t\t\t\t\t\t\t<span className=\"text-2xl mx-3 my-auto\">\n\t\t\t\t\t\t\t\t\t{new Intl.NumberFormat(\"es-CO\", {\n\t\t\t\t\t\t\t\t\t\tstyle: \"currency\",\n\t\t\t\t\t\t\t\t\t\tcurrency: \"COP\",\n\t\t\t\t\t\t\t\t\t}).format(vino.precio)}\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t{existe ? (\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-row gap-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex flex-row justify-center gap-4\"></div>\n\t\t\t\t\t\t\t\t\t\t{renderCartButton(\n\t\t\t\t\t\t\t\t\t\t\t() => handleRemoveFromCart(vino.id_unica),\n\t\t\t\t\t\t\t\t\t\t\t\"Eliminar Del carrito\",\n\t\t\t\t\t\t\t\t\t\t\t\"/carrito.svg\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<div className=\"flex flex-row gap-3\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"flex flex-row bg-white rounded-xl\">\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={decrementar}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-center px-3 py-1 bg-red-500 text-white rounded-l\"\n\t\t\t\t\t\t\t\t\t\t\t\t// \"-\"\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t{\"-\"}\n\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"w-16 text-center my-auto \">\n\t\t\t\t\t\t\t\t\t\t\t\t{contador}\n\t\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={incrementar}\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"text-center px-3 py-1 bg-green-500 text-white rounded-r\"\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\"+\"}\n\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t{renderCartButton(\n\t\t\t\t\t\t\t\t\t\t\t() => handleAddToCart(vino),\n\t\t\t\t\t\t\t\t\t\t\t\"Agregar Al carrito\",\n\t\t\t\t\t\t\t\t\t\t\t\"/carrito.svg\"\n\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<InfoRow title=\"Bodega\" content={vino.bodega} />\n\t\t\t\t\t\t\t<InfoRow title=\"Región\" content={vino.region} />\n\t\t\t\t\t\t\t<InfoRow title=\"Tipo\" content={`Vino ${vino.tipo}`} />\n\t\t\t\t\t\t\t<InfoRow title=\"Tipo Barrica\" content={vino.tipo_barrica} />\n\t\t\t\t\t\t\t<InfoRow title=\"Notas de Cata\" content={vino.notas_cata} />\n\t\t\t\t\t\t\t<InfoRow title=\"Maridaje\" content={vino.maridaje} />\n\t\t\t\t\t\t\t<InfoRow\n\t\t\t\t\t\t\t\ttitle=\"Temperatura de Consumo\"\n\t\t\t\t\t\t\t\tcontent={vino.temperatura_consumo}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<aside className=\"col-span-1\"></aside>\n\t\t\t</main>\n\t\t</>\n\t);\n}\n"
      },
      "layout.tsx": "import \"@/app/ui/global.css\";\nimport MainHeader from \"../ui/home/main-header\";\n\nexport default function RootLayout({\n\tchildren,\n}: {\n\tchildren: React.ReactNode;\n}) {\n\treturn (\n\t\t<html lang=\"en\">\n\t\t\t<body className=\"bg-principalColor2 pb-2.5\">\n\t\t\t\t{children}\n\t\t\t</body>\n\t\t</html>\n\t);\n}\n"
    },
    "layout.tsx": "import '@/app/ui/global.css'\n\nexport default function RootLayout({\n\tchildren,\n}: {\n\tchildren: React.ReactNode;\n}) {\n\treturn (\n    <html lang=\"en\">\n      <head>\n        <script\n          src=\"https://kit.fontawesome.com/b33142c330.js\"\n          crossOrigin=\"anonymous\"\n          defer\n        ></script>\n      </head>\n      <body>{children}</body>\n    </html>\n  );\n}\n",
    "lib": {
      "Interfaces.ts": "// interfaces de la bd\nexport interface Vinos {\n  id: number;\n  nombre: string;\n  precio: number;\n  variedad: number;\n  id_unica: number;\n  url_imagen: string;\n  variedades: Variety;\n  paises: Country;\n}\nexport interface Nueva {\n  id: any;\n  nombre: any;\n  precio: any;\n  variedad: any;\n  id_unica: any;\n  url_imagen: any;\n  variedades: { variedad: any }[];\n  paises: { pais: any }[];\n}\n\nexport interface Variedades {\n  id: number;\n  variedad: string;\n}\n\nexport interface Paises {\n  id: number;\n  pais: string;\n}\n\n// otras interfaces\nexport interface AsideProps {\n  variedades: Variedades[];\n  paises: Paises[];\n}\n\nexport interface CarouselProps {\n  vinos: Vinos[];\n  page: number;\n  itemsPerPage: number;\n  onNextPage: () => void;\n  onPrevPage: () => void;\n}\n\nexport interface CarouselSectionProps {\n  vinos: Vinos[];\n  variedad: string;\n}\n\nexport interface PaginationDotsProps {\n  currentPage: number;\n  totalPages: number;\n  onPageClick: (index: number) => void;\n}\n\nexport interface Country {\n  pais: string;\n}\n\nexport interface Variety {\n  variedad: string;\n}\n\nexport interface CartItem {\n  productId: number;\n  nombre: string;\n  quantity: number;\n  price: number;\n  timestamp?: number; // Agregar timestamp opcional\n}\n",
      "modal.ts": "import { CartItem } from \"./Interfaces\";\n\nexport interface ModalCarrito {\n  isModalOpen: boolean;\n  setIsModalOpen: (isOpen: boolean) => void;\n  cartItems: CartItem[];\n}\n\nexport interface ModalMenu {\n  isModalOpen: boolean;\n  setIsModalOpen: (isOpen: boolean) => void;\n}",
      "tablas.ts": "export interface VinosT {\n\tid: number;\n\tnombre: string;\n\tvariedad: number;\n\tanada: number;\n\tbodega: string;\n\tpais: number;\n\tregion: string;\n\tprecio: number;\n\tstock: number;\n\ttipo: Tipo;\n\tnivel_alcohol: number;\n\ttipo_barrica: string;\n\tdescripcion: string;\n\tnotas_cata: string;\n\ttemperatura_consumo: string;\n\tmaridaje: string;\n\tid_categoria: number;\n\tactivo: boolean;\n\tid_unica: number;\n\turl_imagen: string;\n\tpromocion: boolean;\n\tbusqueda: number;\n\tvariedades: Variedades;\n\tpaises: Paises;\n}\n\nexport enum Tipo {\n\tBlanco = \"Blanco\",\n\tTinto = \"Tinto\",\n}\n\nexport interface Paises {\n\tpais: string;\n}\n\nexport interface Variedades {\n\tvariedad: string;\n}\n\nexport interface PaisesT {\n\tid: number;\n\tpais: string;\n}\n\nexport interface SeccionesT {\n\tid: number;\n\tnombre: string;\n\tactivo: boolean;\n\tid_unica: number;\n}\n\nexport interface VariedadesT {\n\tid: number;\n\tvariedad: string;\n\tpais_origen: number;\n}"
    },
    "modales": {
      "carrito": {
        "ModalCarrito.tsx": "import React, { useEffect } from \"react\";\nimport { type ModalCarrito } from \"@/app/lib/modal\";\n\nexport default function ModalCarrito({\n  isModalOpen,\n  setIsModalOpen,\n  cartItems,\n}: ModalCarrito) {\n  useEffect(() => {\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsModalOpen(false);\n      }\n    };\n\n    if (isModalOpen) {\n      document.body.style.overflow = \"hidden\";\n      document.addEventListener(\"keydown\", handleEscape);\n    } else {\n      document.body.style.overflow = \"unset\";\n    }\n\n    return () => {\n      document.body.style.overflow = \"unset\";\n      document.removeEventListener(\"keydown\", handleEscape);\n    };\n  }, [isModalOpen, setIsModalOpen]);\n\n  if (!isModalOpen) return null;\n\n  function renderHeader() {\n    return (\n      <>\n        <div className=\"flex justify-between p-2\">\n          <button className=\"mr-auto inline-flex items-center rounded-lg bg-transparent p-1.5\">\n            <picture>\n              <img src=\"/carrito.svg\" alt=\"Carrito\" className=\"h-5 w-5\" />\n            </picture>\n          </button>\n          <button\n            onClick={() => setIsModalOpen(false)}\n            type=\"button\"\n            className=\"ml-auto inline-flex items-center rounded-lg bg-transparent p-1.5 text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900\"\n          >\n            <svg\n              className=\"h-5 w-5\"\n              fill=\"currentColor\"\n              viewBox=\"0 0 20 20\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                fillRule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clipRule=\"evenodd\"\n              ></path>\n            </svg>\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  function displayCartItems(): JSX.Element {\n    return (\n      <>\n        <div className=\"pb-3 pt-0 grid grid-rows-[10%_8%_92%] h-full\">\n          <h3 className=\"text-xl font-normal text-gray-500 text-center row-start-1 my-auto\">\n            Este es tu carrito de compras\n          </h3>\n          <div className=\"row-start-2 grid grid-cols-[10%_1fr_15%_15%] gap-x-1 rounded px-3\">\n            <span className=\"text-lg text-start col-start-1\">{\"ID\"}</span>\n            <span className=\"text-lg text-start col-start-2\">{\"Producto\"}</span>\n            <span className=\"text-lg text-center col-start-3\">{\"Cantidad\"}</span>\n            <span className=\"text-lg text-center col-start-4\">Precio</span>\n          </div>\n          <div className=\"row-start-3 flex flex-col gap-1 mt-2 overflow-y-scroll\">\n            {cartItems.length > 0 ? (\n              cartItems.map((item, index) => (\n                <div\n                  key={item.productId}\n                  className={`grid grid-cols-[10%_1fr_15%_15%] gap-x-1 rounded px-3 py-1.5 ${\n                    index % 2 === 0 ? \"bg-blue-100\" : \"bg-green-100\"\n                  }`}\n                >\n                  <span className=\"text-lg col-start-1 text-start\">{item.productId}</span>\n                  <span className=\"text-lg col-start-2 text-start\">{item.nombre}</span>\n                  <span className=\"text-lg col-start-3 text-center\">{item.quantity}</span>\n                  <span className=\"text-lg col-start-4 text-center\">{\"$\" + item.price}</span>\n                </div>\n              ))\n            ) : (\n              <div className=\"text-lg my-3 bg-blue-100 p-3 text-center\">\n                No hay elementos en el carrito.\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div\n        className={\n          \"fixed z-50 inset-0 bg-gray-900/60 \" +\n          \"grid grid-cols-[1fr_70%_1fr] grid-rows-[1fr_80%_1fr]\"\n        }>\n        <div\n          className={\n            \"col-start-2 row-start-2 mx-auto w-full shadow-xl rounded-lg bg-white max-w-4xl \" +\n            \"grid grid-rows-[85%_1fr]\"\n          }>\n          <div className=\"p-3 pb-0 row-start-1 max-h-[85%]\">\n            {renderHeader()}\n            {displayCartItems()}\n          </div>\n          <div className=\"row-start-2 flex flex-row justify-end bg-white\">\n            <button\n              className=\"my-auto py-2 px-4 mx-5 text-lg border rounded bg-green-500 text-white uppercase\"\n              onClick={() => setIsModalOpen(false)}\n            >\n              Pagar\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}"
      },
      "menu": {
        "forms": {
          "emailPassword.tsx": "\"use client\"\n\nimport { useState } from \"react\";\nimport { userLogInEmailPassword } from \"../funcionesServidor\";\n\nasync function handleEmailPassword(email: string, password: string) {\n  try {\n    const { loginEmailPassordData } = await userLogInEmailPassword(email, password)\n    return loginEmailPassordData\n  } catch (error) {\n    console.error(\"Error during LognEmail:\", error);\n  }\n}\n\nexport default function EmailPasswordForm() {\n  const [email, setEmail] = useState<string>(\"\")\n  const [password, setPassword] = useState<string>(\"\")\n\n  const handleEmailPasswordForm = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const emailPasswordData = await handleEmailPassword(email, password);\n    console.log(emailPasswordData);\n  }\n\n  const handleChangeEmail = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  }\n  const handleChangePassword = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  }\n\n  return (\n    <>\n      <form className=\"flex flex-col items-center\" onSubmit={handleEmailPasswordForm}>\n        <div className=\"bg-white rounded-lg shadow-lg max-w-md w-full p-8 my-auto\">\n          <h1 className=\"text-xl font-semibold\">Inicia Sesion</h1>\n          <div className=\"flex flex-col gap-y-2 my-2\">\n            <span>\n              <label className=\"my-2\" htmlFor=\"mail\">\n                Ingresa Tu Correo Electronico\n              </label>\n              <input type=\"email\" name=\"mail\" value={email} onChange={handleChangeEmail} placeholder=\"tu@correo.com\" className=\"w-full px-4 border rounded-lg text-gray-700 focus:border-blue-500\" />\n            </span>\n            <span>\n              <label className=\"my-2\" htmlFor=\"pass\">\n                Ingresa Tu Contraseña\n              </label>\n              <input type=\"password\" name=\"pass\" value={password} onChange={handleChangePassword} placeholder=\"***************\" className=\"w-full px-4 border rounded-lg text-gray-700 focus:border-blue-500\" />\n            </span>\n          </div>\n          <button className=\"w-full bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 focus:outline-none\">\n            Enviar\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}",
          "magicLink.tsx": "\"use client\"\n\nimport { useState } from \"react\";\nimport { userLogInMagicLinkViaEmail } from \"../funcionesServidor\";\n\nasync function handleMagicLink(email: string) {\n  try {\n    const { loginMagicLinkData } = await userLogInMagicLinkViaEmail(email)\n    console.log(\"MagicLink data:\", loginMagicLinkData);\n    return loginMagicLinkData\n  } catch (error) {\n    console.error(\"Error during MagicLink:\", error);\n  }\n}\n\nexport default function MagicLinkForm() {\n  const [email, setEmail] = useState<string>(\"\");\n\n  const handleMagicLinkSubmit = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const magicLinkData = await handleMagicLink(email);\n    console.log(magicLinkData);\n  };\n\n  const magicLinkInputChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  };\n  \n  return(\n    <>\n      <form className=\"flex items-center justify-center h-full\" onSubmit={handleMagicLinkSubmit}>\n        <div className=\"bg-white p-8 rounded-lg shadow-lg max-w-md w-full\">\n          <h1 className=\"text-xl font-semibold mb-4\">Magic Link</h1>\n          <p className=\"text-gray-600 mb-6\">\n            Ingresa tu correo electrónico para poder enviarte el acceso\n          </p>\n          <div className=\"mb-4\">\n            <input\n              type=\"email\"\n              placeholder=\"tu@correo.com\"\n              value={email}\n              onChange={magicLinkInputChangeHandler}\n              className=\"w-full px-4 py-2 border rounded-lg text-gray-700 focus:border-blue-500\"\n            />\n          </div>\n          <button type=\"submit\" className=\"w-full bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 focus:outline-none\">\n            Enviar\n          </button>\n        </div>\n      </form>\n    </>\n  )\n}",
          "signUp.tsx": "import { useState } from \"react\";\nimport { userSignUp } from \"../funcionesServidor\";\n\nasync function handleSignUp(email: string, password: string) {\n  try {\n    const { signUpData } = await userSignUp(email, password)\n    return signUpData\n  } catch (error) {\n    console.error(\"Error during SignUp:\", error);\n  }\n}\n\nexport default function SignUpForm() {\n  const [email, setEmail] = useState<string>(\"\")\n  const [password, setPassword] = useState<string>(\"\")\n\n  const handleSignUpForm = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const signUpData = await handleSignUp(email, password);\n    console.log(signUpData);\n  }\n\n  const handleEmailChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setEmail(event.target.value);\n  }\n  const handlePasswordChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setPassword(event.target.value);\n  }\n\n  return(\n    <>\n      <form className=\"row-start-2 px-3 py-2 h-full flex flex-col\" onSubmit={handleSignUpForm}>\n        <span className=\"mb-3\">\n          <label htmlFor=\"e-mail\">Email</label>\n          <input\n            type=\"email\"\n            name=\"e-mail\"\n            placeholder=\"tu@correo.com\"\n            value={email}\n            onChange={handleEmailChange}\n            className=\"w-full px-4 py-2 border rounded-lg text-gray-700 focus:border-blue-500\"\n          />\n        </span>\n        <span className=\"mb-3\">\n          <label htmlFor=\"pass\">Contraseña</label>\n          <input\n            type=\"password\"\n            name=\"pass\"\n            placeholder=\"***************\"\n            value={password}\n            onChange={handlePasswordChange}\n            className=\"w-full px-4 py-2 border rounded-lg text-gray-700 focus:border-blue-500\"\n          />\n        </span>\n        <button type=\"submit\" className=\"w-full bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 focus:outline-none\">\n          Enviar\n        </button>\n      </form>\n    </>\n  )\n}",
          "user.json": "{\n  \"session\": {\n    \"access_token\": \"eyJhbGciOiJIUzI1NiIsImtpZCI6Im0zOXlQMWg0bkxmRDAvZGQiLCJ0eXAiOiJKV1QifQ.eyJhdWQiOiJhdXRoZW50aWNhdGVkIiwiZXhwIjoxNzE5Mjg0NTkzLCJpYXQiOjE3MTkyODA5OTMsImlzcyI6Imh0dHBzOi8vbnB1eHB1ZWxpbWF5cXJzbXpxdXIuc3VwYWJhc2UuY28vYXV0aC92MSIsInN1YiI6ImRhNjBiOTdhLTI5YTgtNDA4ZC04ZWVjLTIwNmY5NWRkMjJhMSIsImVtYWlsIjoianVhbml0b2dhbWluZzI3MDdAZ21haWwuY29tIiwicGhvbmUiOiIiLCJhcHBfbWV0YWRhdGEiOnsicHJvdmlkZXIiOiJlbWFpbCIsInByb3ZpZGVycyI6WyJlbWFpbCJdfSwidXNlcl9tZXRhZGF0YSI6e30sInJvbGUiOiJBZG1pbiIsImFhbCI6ImFhbDEiLCJhbXIiOlt7Im1ldGhvZCI6InBhc3N3b3JkIiwidGltZXN0YW1wIjoxNzE5MjgwOTkzfV0sInNlc3Npb25faWQiOiIzMTg5NjczYi1lNzYyLTQ3YWItYmRiNi1kYjEwZDBhOTc1YjQiLCJpc19hbm9ueW1vdXMiOmZhbHNlfQ.6kuVIchFXuP0rAJD6vsyCeEaiHolm9LfI6BBL3xnsLs\",\n    \"token_type\": \"bearer\",\n    \"expires_in\": 3600,\n    \"expires_at\": 1719284593,\n    \"refresh_token\": \"iYPcJggpu6CLc_zhF4wMow\",\n    \"user\": {\n      \"id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n      \"aud\": \"authenticawted\",\n      \"role\": \"Admin\",\n      \"email\": \"juanitogaming2707@gmail.com\",\n      \"email_confirmed_at\": \"2023-06-13T05:41:53.661187Z\",\n      \"phone\": \"\",\n      \"confirmation_sent_at\": \"2023-06-13T05:41:22.370192Z\",\n      \"confirmed_at\": \"2023-06-13T05:41:53.661187Z\",\n      \"recovery_sent_at\": \"2024-06-24T23:39:28.297122Z\",\n      \"last_sign_in_at\": \"2024-06-25T02:03:13.1337541Z\",\n      \"app_metadata\": {\n        \"provider\": \"email\",\n        \"providers\": [\"email\"]\n      },\n      \"user_metadata\": {},\n      \"identities\": [\n        {\n          \"identity_id\": \"3c93f94f-2802-4831-9d70-0873a942373d\",\n          \"id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n          \"user_id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n          \"identity_data\": {\n            \"email\": \"juanitogaming2707@gmail.com\",\n            \"sub\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\"\n          },\n          \"provider\": \"email\",\n          \"last_sign_in_at\": \"2023-06-13T05:41:22.366716Z\",\n          \"created_at\": \"2023-06-13T05:41:22.366752Z\",\n          \"updated_at\": \"2023-06-13T05:41:22.366752Z\",\n          \"email\": \"juanitogaming2707@gmail.com\"\n        }\n      ],\n      \"created_at\": \"2023-06-13T05:41:22.358194Z\",\n      \"updated_at\": \"2024-06-25T02:03:13.144557Z\",\n      \"is_anonymous\": false\n    }\n  },\n  \"user\": {\n    \"id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n    \"aud\": \"authenticated\",\n    \"role\": \"Admin\",\n    \"email\": \"juanitogaming2707@gmail.com\",\n    \"email_confirmed_at\": \"2023-06-13T05:41:53.661187Z\",\n    \"phone\": \"\",\n    \"confirmation_sent_at\": \"2023-06-13T05:41:22.370192Z\",\n    \"confirmed_at\": \"2023-06-13T05:41:53.661187Z\",\n    \"recovery_sent_at\": \"2024-06-24T23:39:28.297122Z\",\n    \"last_sign_in_at\": \"2024-06-25T02:03:13.1337541Z\",\n    \"app_metadata\": {\n      \"provider\": \"email\",\n      \"providers\": [\"email\"]\n    },\n    \"user_metadata\": {},\n    \"identities\": [\n      {\n        \"identity_id\": \"3c93f94f-2802-4831-9d70-0873a942373d\",\n        \"id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n        \"user_id\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\",\n        \"identity_data\": {\n          \"email\": \"juanitogaming2707@gmail.com\",\n          \"sub\": \"da60b97a-29a8-408d-8eec-206f95dd22a1\"\n        },\n        \"provider\": \"email\",\n        \"last_sign_in_at\": \"2023-06-13T05:41:22.366716Z\",\n        \"created_at\": \"2023-06-13T05:41:22.366752Z\",\n        \"updated_at\": \"2023-06-13T05:41:22.366752Z\",\n        \"email\": \"juanitogaming2707@gmail.com\"\n      }\n    ],\n    \"created_at\": \"2023-06-13T05:41:22.358194Z\",\n    \"updated_at\": \"2024-06-25T02:03:13.144557Z\",\n    \"is_anonymous\": false\n  }\n}"
        },
        "funcionesServidor.tsx": "import { supabase } from \"@/app/supabase\";\n\nexport async function userSignUp(email: string, password: string) {\n\tlet { data: signUpData, error: signUpError } = await supabase.auth.signUp({\n\t\temail,\n\t\tpassword,\n\t});\n\n\tif (!signUpError) {\n\t\treturn {signUpData}\n\t}\n\n\treturn {signUpError}\n}\n\n\nexport async function userLogInEmailPassword(email: string, password: string) {\n\tlet { data: loginEmailPassordData, error: loginEmailPassordError } = await supabase.auth.signInWithPassword({\n\t\temail,\n\t\tpassword,\n\t});\n\n\tif (!loginEmailPassordError) {\n\t\treturn {loginEmailPassordData}\n\t}\n\n\treturn {loginEmailPassordError}\n}\n\nexport async function userLogInMagicLinkViaEmail(email: string) {\n\tlet { data: loginMagicLinkData, error: loginMagicLinkError } = await supabase.auth.signInWithOtp({ email });\n\n\tif (!loginMagicLinkError) {\n\t\treturn {loginMagicLinkData}\n\t}\n\n\treturn {loginMagicLinkData}\n}",
        "ModalMenu.tsx": "// Eliminamos las importaciones no utilizadas\n// import {\n//   userLogInEmailPassword,\n//   userLogInMagicLinkViaEmail,\n//   userSignUp,\n// } from \"./funcionesServidor\";\n\nimport React, { useEffect, useState } from \"react\";\nimport EmailPasswordForm from \"./forms/emailPassword\";\nimport MagicLinkForm from \"./forms/magicLink\";\nimport SignUpForm from \"./forms/signUp\";\nimport { type ModalMenu } from \"@/app/lib/modal\";\n\ntype FormType = \"email\" | \"magicLink\" | \"sign up\";\n\nexport default function ModalMenu({ isModalOpen, setIsModalOpen }: ModalMenu) {\n  // Mover useState fuera de cualquier condicional para cumplir con las reglas de los Hooks\n  const [form, setForm] = useState<FormType>(\"email\");\n\n  // Asegurarse de que useEffect no se llame condicionalmente\n  useEffect(() => {\n    if (!isModalOpen) {\n      return;\n    }\n\n    const handleEscape = (event: KeyboardEvent) => {\n      if (event.key === \"Escape\") {\n        setIsModalOpen(false);\n      }\n    };\n\n    document.body.style.overflow = \"hidden\";\n    document.addEventListener(\"keydown\", handleEscape);\n\n    return () => {\n      document.body.style.overflow = \"unset\";\n      document.removeEventListener(\"keydown\", handleEscape);\n    };\n  }, [isModalOpen, setIsModalOpen]);\n\n  if (!isModalOpen) return null;\n\n  const renderForm = (newForm: FormType) => {\n    setForm(newForm);\n  };\n\n  function renderModalHeader(title: string) {\n    return (\n      <>\n        <div className=\"p-2 pb-0\">\n          <div className=\"flex flex-row justify-end p-2\">\n            <button\n              onClick={() => setIsModalOpen(false)}\n              type=\"button\"\n              className=\"ml-auto inline-flex items-center rounded-lg bg-transparent p-1.5 text-sm text-gray-400 hover:bg-gray-200 hover:text-gray-900\"\n            >\n              <svg\n                className=\"h-5 w-5\"\n                fill=\"currentColor\"\n                viewBox=\"0 0 20 20\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n              >\n                <path\n                  fillRule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clipRule=\"evenodd\"\n                ></path>\n              </svg>\n            </button>\n          </div>\n          <div className=\"pb-2 pt-0 text-center\">\n            {/* Corregir el uso de children como prop */}\n            <h3 className=\"text-xl font-normal text-black\">{title}</h3>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  function renderModalOptions() {\n    return (\n      <>\n        <div className=\"row-start-1\">\n          {renderModalHeader(\"Inicia Sesion\")}\n          <div className=\"grid grid-cols-2 gap-3 px-4\">\n            {/* Corregir el uso de children como prop */}\n            <button\n              className=\"p-2 text-center text-black border border-black rounded-lg col-start-1\"\n              onClick={() => renderForm(\"email\")}\n            >\n              Email\n            </button>\n            {/* Corregir el uso de children como prop */}\n            <button\n              className=\"p-2 text-center text-black border border-black rounded-lg col-start-2\"\n              onClick={() => renderForm(\"magicLink\")}\n            >\n              Magic Link\n            </button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  const FORM_COMPONENTS: Record<FormType, React.ElementType> = {\n    email: EmailPasswordForm,\n    magicLink: MagicLinkForm,\n    \"sign up\": SignUpForm,\n  };\n\n  function ModalContent({ formOption }: { formOption: FormType }) {\n    const FormComponent = FORM_COMPONENTS[formOption];\n    return FormComponent ? <FormComponent /> : null;\n  }\n\n  function renderModalForms(formOption: FormType) {\n    return <ModalContent formOption={formOption} />;\n  }\n\n  function renderSignUpOption() {\n    return (\n      <>\n        <div className=\"flex flex-row gap-1 mx-auto my-2 row-start-3\">\n          <p className=\"text-black my-auto\">No Tienes Una Cuenta?</p>\n          {/* Corregir el uso de children como prop */}\n          <button\n            className=\"p-2 text-center text-blue-500\"\n            onClick={() => renderForm(\"sign up\")}\n          >\n            Crea Una\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  function renderSignInOption() {\n    return (\n      <>\n        <div className=\"flex flex-row gap-1 mx-auto my-2 row-start-3\">\n          <p className=\"text-black my-auto\">Ya Tienes Una Cuenta?</p>\n          {/* Corregir el uso de children como prop */}\n          <button\n            className=\"p-2 text-center text-blue-500\"\n            onClick={() => renderForm(\"email\")}\n          >\n            Inicia Sesion\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <div // fondo del modal\n        id=\"modelConfirm\"\n        className=\"fixed z-50 inset-0 bg-gray-900/80 grid grid-cols-[1fr_40%_1fr] grid-rows-[1fr_90%_1fr]\"\n      >\n        {form === \"email\" || form === \"magicLink\" ? (\n          <div className=\"col-start-2 row-start-2 mx-auto w-full shadow-xl rounded-lg bg-white px-3 max-w-3xl grid grid-rows-[25%_1fr_10%]\">\n            {renderModalOptions()}\n            {renderModalForms(form)}\n            {renderSignUpOption()}\n          </div>\n        ) : (\n          <div className=\"col-start-2 row-start-2 mx-auto w-full shadow-xl rounded-lg bg-white px-3 max-w-3xl grid grid-rows-[20%_1fr_10%]\">\n            {renderModalHeader(\"Registate\")}\n            {renderModalForms(form)}\n            {renderSignInOption()}\n          </div>\n        )}\n      </div>\n    </>\n  );\n}"
      }
    },
    "page.tsx": "// \"use client\"\n\nimport { redirect } from 'next/navigation';\n\nexport default function HomeRedirect() {\n\treturn(\n\t\tredirect('/home')\n\t)\n}\n",
    "supabase.tsx": "import { createClient } from '@supabase/supabase-js'\n\nconst supabaseUrl = 'https://npuxpuelimayqrsmzqur.supabase.co'\nconst supabaseKey =\n\t\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5wdXhwdWVsaW1heXFyc216cXVyIiwicm9sZSI6ImFub24iLCJpYXQiOjE2OTI4NDA4OTUsImV4cCI6MjAwODQxNjg5NX0.BdphzWe3xBzZZ_helLZlsUVDVEjByXfS8FjJP6Agn0M\";\n\nexport const supabase = createClient(supabaseUrl, supabaseKey)",
    "ui": {
      "fonts.tsx": "import { Lusitana, Montserrat, Poppins } from 'next/font/google'\n\nexport const lusitana = Lusitana({ \n\tweight: ['400', '700'],\n\tsubsets: ['latin'] \n})\nexport const poppins = Poppins({\n\tweight: ['100', '200', '300', '400', '500', '600', '700', '800', '900'],\n\tsubsets: ['latin']\n})\nexport const montserrat = Montserrat({\n\tweight: ['100','200','300', '400','500', '600', '700', '800', '900'],\n\tsubsets: ['latin']\n})",
      "global.css": "@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\ninput[type='number'] {\n\t-moz-appearance: textfield;\n\tappearance: textfield;\n}\n\ninput[type='number']::-webkit-inner-spin-button {\n\t-webkit-appearance: none;\n\tmargin: 0;\n}\n\ninput[type='number']::-webkit-outer-spin-button {\n\t-webkit-appearance: none;\n\tmargin: 0;\n}\n\n::-webkit-scrollbar {\n\tdisplay: none;\n}\n\n/* body {\n\tbackground: rgb(99, 21, 92)\n} */",
      "home": {
        "cliente": {
          "AsideMainClient.tsx": "\"use client\";\n\nimport useCart from \"@/app/hooks/carrito\";\nimport { Paises, Variedades } from \"@/app/lib/Interfaces\";\nimport { poppins } from \"@/app/ui/fonts\";\nimport { useState } from \"react\";\nimport ModalCarrito from \"../../../modales/carrito/ModalCarrito\";\n\n// Props interface\ninterface AsideMainClientProps {\n\tvariedades: Variedades[];\n\tpaises: Paises[];\n}\n\n// Function to render a list of items\n/**\n * Renders a section with a title and a list of items.\n * @param items An array of objects with id and name properties.\n * @param title The title of the list section.\n * @returns JSX element representing the styled section with title and items list.\n */\nconst RenderList = ({ items, title }: { items: { id: number; name: string, arreglo: string }[], title: string }) => {\n\tconst [selectedItems, setSelectedItems] = useState<string[]>([]);\n\n\tconst handleCheckboxChange = (itemName: string, arreglo: string) => {\n\t\tconst newSelectedItems = selectedItems.includes(itemName)\n\t\t\t? selectedItems.filter(item => item !== itemName)\n\t\t\t: [...selectedItems, itemName];\n\n\t\t// Ordena los elementos seleccionados alfabéticamente\n\t\tconst sortedSelectedItems = newSelectedItems.sort();\n\n\t\tsetSelectedItems(sortedSelectedItems);\n\n\t\tconst queryString = sortedSelectedItems.length > 0\n\t\t\t? `?${arreglo}=${sortedSelectedItems.join(',')}`\n\t\t\t: '';\n\n\t\twindow.history.pushState(null, '', queryString || window.location.pathname);\n\t};\n\n\treturn (\n\t\t<section className=\"pb-2 border-t bg-normalColor11 border-principalColor1 rounded-b-xl\">\n\t\t\t<span className=\"flex items-center justify-center my-2 text-xl font-bold text-principalColor1\">\n\t\t\t\t{title}\n\t\t\t</span>\n\t\t\t<ul className=\"flex flex-col gap-2\">\n\t\t\t\t{items.map((item) => (\n\t\t\t\t\t<li key={item.id} className=\"flex items-center pl-3 text-sm font-semibold text-black\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tid={`checkbox-${item.id}`}\n\t\t\t\t\t\t\tname={item.name}\n\t\t\t\t\t\t\tvalue={item.name}\n\t\t\t\t\t\t\tonChange={() => handleCheckboxChange(item.name, item.arreglo)}\n\t\t\t\t\t\t\tclassName=\"mr-2\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<label htmlFor={`checkbox-${item.id}`}>{item.name}</label>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</section>\n\t);\n};\n\nexport default function AsideMainClient({\n\tvariedades,\n\tpaises,\n}: AsideMainClientProps) {\n\tconst { cartItems } = useCart();\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\n\tconst handleOpenModal = () => {\n\t\tsetIsModalOpen(true);\n\t};\n\n\treturn (\n\t\t<aside className=\"flex flex-col max-w-[20%] min-w-[15%] rounded-l-xl bg-normalColor11\">\n\t\t\t<button\n\t\t\t\tclassName=\"w-16 h-16 p-3 mx-auto my-4 border border-principalColor1 rounded-lg\"\n\t\t\t\tonClick={handleOpenModal}\n\t\t\t>\n\t\t\t\t<picture>\n\t\t\t\t\t<img src=\"/carrito.svg\" alt=\"Carrito\" />\n\t\t\t\t</picture>\n\t\t\t</button>\n\t\t\t{isModalOpen && (\n\t\t\t\t<ModalCarrito\n\t\t\t\t\tisModalOpen={isModalOpen}\n\t\t\t\t\tsetIsModalOpen={setIsModalOpen}\n\t\t\t\t\tcartItems={cartItems}\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<span\n\t\t\t\tclassName={`${poppins.className} flex items-center justify-center text-[1.5em] font-bold text-principalColor1 bg-normalColor11 rounded-t-xl px-5 py-2`}\n\t\t\t>{\"FILTROS\"}</span>\n\t\t\t<RenderList\n\t\t\t\titems={variedades.map((v) => ({\n\t\t\t\t\tid: v.id,\n\t\t\t\t\tname: v.variedad,\n\t\t\t\t\tarreglo: \"variedades\"\n\t\t\t\t}))}\n\t\t\t\ttitle=\"VARIEDADES\"\n\t\t\t/>\n\t\t\t{/* <RenderList\n\t\t\t\t\t\t\titems={paises.map((p) => ({\n\t\t\t\t\t\t\t\t\tid: p.id,\n\t\t\t\t\t\t\t\t\tname: p.pais,\n\t\t\t\t\t\t\t\t\tarreglo: \"paises\"\n\t\t\t\t\t\t\t}))}\n\t\t\t\t\t\t\ttitle=\"PAISES\"\n\t\t\t\t\t/> */}\n\t\t</aside>\n\t);\n}",
          "Carousel.tsx": "\"use client\";\n\nimport Image from \"next/image\";\nimport { CarouselProps } from \"@/app/lib/Interfaces\";\n\nexport default function Carousel({\n\tvinos,\n\tpage,\n\titemsPerPage,\n\tonNextPage,\n\tonPrevPage,\n}: CarouselProps) {\n\tconst startIndex = page * itemsPerPage;\n\tconst endIndex = startIndex + itemsPerPage;\n\tconst vinosEnPagina = vinos.slice(startIndex, endIndex);\n\n\treturn (\n    <>\n      <div className=\"flex\">\n        <button\n          className=\"px-1 py-4 m-auto border rounded-full bg-white/80 border-principalColor1 transition-transform duration-300 ease-in-out hover:scale-105\"\n          onClick={onPrevPage}\n        >\n          {\"←\"}\n        </button>\n        <div\n          className={\n            \"grid justify-center mx-auto transition-transform duration-300 ease-in-out transform-gpu\" +\n            \"A:grid-cols-[repeat(1,_minmax(250px,_270px))] B:grid-cols-[repeat(2,_minmax(250px,_270px))] C:grid-cols-[repeat(3,_minmax(250px,_270px))] D:grid-cols-[repeat(4,_minmax(250px,_270px))] E:grid-cols-[repeat(5,_minmax(250px,_270px))]\"\n          }\n        >\n          {vinosEnPagina.map((vino) => (\n            <article\n              className=\"rounded-t-[10px] transform transition-transform hover:scale-105 hover:shadow-xl hover:duration-150 hover:ease-in-out min-w-[240px] max-w-[250px] scroll-snap-align-start z-10 mx-auto\"\n              key={vino.id_unica}\n            >\n              <a\n                href={`/informacion/${\n                  vino.nombre +\n                  \" \" +\n                  vino.variedades.variedad +\n                  \" ~ \" +\n                  vino.id_unica\n                }`}\n              >\n                <Image\n                  className=\"my-2 rounded-[10px]\"\n                  src={vino.url_imagen}\n                  alt={vino.nombre}\n                  width={250}\n                  height={250}\n                />\n              </a>\n              <div className=\"p-4 border-2 border-principalColor1 rounded-b-[10px]\">\n                <span\n                  className=\"mb-2 text-[0.9em] font-poppins text-principalColor1 font-semibold\"\n                >{vino.nombre}</span>\n                <p\n                  className=\"mb-2 text-[0.9em] font-poppins text-principalColor1\"\n                >\n                  {vino.variedades.variedad || \"Variedad Desconocida\"}\n                </p>\n                <div className=\"flex items-center justify-between\">\n                  <p\n                    className=\"mr-0 font-semibold font-poppins text-principalColor1 text-[0.9em]\"\n                  >\n                    {`$${vino.precio} COP`}\n                  </p>\n                  <a\n                    href={`/informacion/${\n                      vino.nombre +\n                      \" \" +\n                      vino.variedades.variedad +\n                      \" ~ \" +\n                      vino.id_unica\n                    }`}\n                    className=\"px-2 py-1 text-xs font-semibold uppercase transition-all duration-150 ease-linear border rounded-lg outline-none text-emerald-500 background-transparent focus:outline-none border-emerald-500\"\n                  >\n                    {\"INFORMACIÓN\"}\n                  </a>\n                </div>\n              </div>\n            </article>\n          ))}\n        </div>\n        <button\n          className=\"px-1 py-4 m-auto border rounded-full bg-white/80 border-principalColor1\"\n          onClick={onNextPage}\n        >\n          {\"→\"}\n        </button>\n      </div>\n    </>\n  );\n}\n",
          "CarouselSection.tsx": "\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport {\n\tCarouselSectionProps,\n\tPaginationDotsProps,\n} from \"@/app/lib/Interfaces\";\nimport Carousel from \"./Carousel\";\n\nfunction PaginationDots({\n\tcurrentPage,\n\ttotalPages,\n\tonPageClick,\n}: PaginationDotsProps) {\n\treturn (\n\t\t<div className=\"flex justify-center mt-4\">\n\t\t\t{Array.from({ length: totalPages }).map((_, index) => (\n\t\t\t\t<button\n\t\t\t\t\tkey={index}\n\t\t\t\t\tonClick={() => onPageClick(index)}\n\t\t\t\t\tclassName={`h-2 w-2 mx-1 rounded-full ${\n\t\t\t\t\t\tcurrentPage === index ? \"bg-principalColor1\" : \"bg-principalColor2 border border-black\"\n\t\t\t\t\t}`}\n\t\t\t\t/>\n\t\t\t))}\n\t\t</div>\n\t);\n}\n\nexport default function CarouselSection({\n\tvinos,\n\tvariedad,\n}: CarouselSectionProps) {\n\tconst [ page, setPage ] = useState(0);\n\tconst [ itemsPerPage, setItemsPerPage ] = useState(4);\n\n\tuseEffect(() => {\n\t\tconst updateItemsPerPage = () => {\n\t\t\tconst breakpoints = [\n\t\t\t\t{ width: 1440, items: 4 },\n\t\t\t\t{ width: 1024, items: 3 },\n\t\t\t\t{ width: 768, items: 2 },\n\t\t\t\t{ width: 0, items: 1 },\n\t\t\t];\n\n\t\t\tconst matchingBreakpoint = breakpoints.find(breakpoint => window.innerWidth >= breakpoint.width);\n\t\t\tif (matchingBreakpoint) {\n\t\t\t\tsetItemsPerPage(matchingBreakpoint.items);\n\t\t\t}\n\t\t};\n\n\t\tupdateItemsPerPage(); // Llama a la función al montar\n\t\twindow.addEventListener(\"resize\", updateItemsPerPage);\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(\"resize\", updateItemsPerPage);\n\t\t};\n\t}, []);\n\n\tconst totalPages = Math.ceil(vinos.length / itemsPerPage);\n\n\tconst handleNextPage = () =>\n\t\tsetPage((prevPage) => (prevPage + 1) % totalPages);\n\tconst handlePrevPage = () =>\n\t\tsetPage((prevPage) => (prevPage - 1 + totalPages) % totalPages);\n\tconst handlePageClick = (index: number) => setPage(index);\n\n\treturn (\n\t\t<section className=\"mx-1 pb-[3%] items-center overflow-x-auto m-0 scroll-smooth\">\n\t\t\t<h2 className=\"my-3 flex items-center justify-center font-poppins text-[2em] font-bold leading-10 text-principalColor1 uppercase\">{variedad}</h2>\t\n\t\t\t<Carousel\n\t\t\t\tvinos={vinos}\n\t\t\t\tpage={page}\n\t\t\t\titemsPerPage={itemsPerPage}\n\t\t\t\tonNextPage={handleNextPage}\n\t\t\t\tonPrevPage={handlePrevPage}\n\t\t\t/>\n\t\t\t<PaginationDots\n\t\t\t\tcurrentPage={page}\n\t\t\t\ttotalPages={totalPages}\n\t\t\t\tonPageClick={handlePageClick}\n\t\t\t/>\n\t\t</section>\n\t);\n}"
        },
        "FilterCardProducts.tsx": "\"use client\"\n\nimport { useEffect, useState } from 'react';\n\ninterface Main {\n  id: number;\n  nombre: string;\n  precio: number;\n  variedad: number;\n  id_unica: number;\n  url_imagen: string;\n  variedades: Variedades;\n  paises: Paises;\n}\n\ninterface Paises {\n  pais: string;\n}\n\ninterface Variedades {\n  variedad: string;\n}\n\nexport default function FilteredCards() {\n  const [variedadesArray, setVariedadesArray] = useState<string[]>([]);\n  const [data, setData] = useState<{ vinos: Main[], variedades: Variedades[] } | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    // Función que actualiza variedadesArray si hay cambios en los parámetros de la URL\n    const checkVariedades = () => {\n      const urlParams = new URLSearchParams(window.location.search);\n      const variedadesValue = urlParams.get('variedades');\n\n      if (variedadesValue) {\n        const nuevasVariedades = variedadesValue.split(',');\n        setVariedadesArray((prevArray) => {\n          const updatedArray = [...new Set(nuevasVariedades)];\n          // Solo actualizar si hay un cambio real\n          if (JSON.stringify(prevArray) !== JSON.stringify(updatedArray)) {\n            return updatedArray;\n          }\n          return prevArray;\n        });\n      } else {\n        setVariedadesArray([]);\n      }\n    };\n\n    // Ejecutar la función al cargar el componente\n    checkVariedades();\n\n    // Escuchar cambios en el evento \"popstate\" (cuando la historia de navegación cambia)\n    const handlePopState = () => checkVariedades();\n    window.addEventListener('popstate', handlePopState);\n\n    // Limpieza del event listener al desmontar el componente\n    return () => {\n      window.removeEventListener('popstate', handlePopState);\n    };\n  }, []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`/api/vinos?variedades=${variedadesArray.join(',')}`);\n        if (!response.ok) {\n          throw new Error(`Error: ${response.status}`);\n        }\n        const result = await response.json();\n        setData(result);\n      } catch (error) {\n        console.error('Fetch error:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, [variedadesArray]);\n\n\n  if (loading) return <div>Loading...</div>;\n\n  return (\n    <main className=\"w-full px-1 pt-3 pb-1 bg-normalColor11 rounded-r-xl\">\n      {JSON.stringify(data)}\n    </main>\n  );\n}\n",
        "main-header.tsx": "'use client'\n\nimport Image from \"next/image\";\nimport { useState } from \"react\";\nimport ModalMenu from \"../../modales/menu/ModalMenu\";\n\nexport default function MainHeader() {\n  const [ isModalOpen, setIsModalOpen ] = useState(false);\n\n  const handleOpenModal = () => {\n    setIsModalOpen(true);\n  };\n\treturn (\n    <>\n      <header className=\"z-0 mx-2.5 mb-3 w-auto rounded-b-xl bg-magenta-500 py-3\">\n        <div className=\"mx-auto mb-[10px] flex items-center justify-evenly\">\n          <a href=\"/home\" className=\"inline-block p-3 rounded-md\">\n            <Image\n              src=\"https://npuxpuelimayqrsmzqur.supabase.co/storage/v1/object/public/images/some/image-removebg-preview.svg\"\n              alt=\"\"\n              width={120}\n              height={120}\n            />\n          </a>\n\n          <div className=\"inline-flex flex-col items-center justify-center w-auto h-auto\">\n            <div\n              className=\"text-center text-[40px] font-semibold text-black\"\n            >\n              {\"LOS VINOS\"}\n            </div>\n            <div\n              className=\"text-2xl font-semibold text-center text-black\"\n            >\n              {\"Wine Bar\"}\n            </div>\n            <div\n              className=\"text-2xl font-semibold text-center text-black\"\n            >\n              {\"Villa de Leyva, Carrera 9 #11-47 Segundo piso\"}\n            </div>\n            <div className=\"inline-flex h-[26px] items-center justify-center self-stretch mx-auto\">\n              <div className=\"text-center text-black flex flex-row gap-2 p-2\">\n                <p className=\"text-lg font-bold\">CONTACTANOS (+57) 3219085857</p>\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\" className=\"h-5 w-5 my-auto\"><path d=\"M164.9 24.6c-7.7-18.6-28-28.5-47.4-23.2l-88 24C12.1 30.2 0 46 0 64C0 311.4 200.6 512 448 512c18 0 33.8-12.1 38.6-29.5l24-88c5.3-19.4-4.6-39.7-23.2-47.4l-96-40c-16.3-6.8-35.2-2.1-46.3 11.6L304.7 368C234.3 334.7 177.3 277.7 144 207.3L193.3 167c13.7-11.2 18.4-30 11.6-46.3l-40-96z\"/></svg>\n              </div>\n            </div>\n          </div>\n\n          <button\n            className=\"relative mx-[50px] my-10 p-3\"\n            id=\"boton-menu\"\n            onClick={handleOpenModal}\n          >\n            <picture>\n              <img\n                src=\"https://npuxpuelimayqrsmzqur.supabase.co/storage/v1/object/public/images/some/bars-solid.svg\"\n                id=\"icono-menu\"\n                alt=\"\"\n                className=\"w-7 align-top cursor-pointer\"\n              />\n            </picture>\n          </button>\n          {isModalOpen && (\n            <ModalMenu\n              isModalOpen={isModalOpen}\n              setIsModalOpen={setIsModalOpen}\n            />\n          )}\n        </div>\n      </header>\n    </>\n  );\n}",
        "servidor": {
          "AsideMainServer.tsx": "import { Paises, Variedades } from \"@/app/lib/Interfaces\";\nimport { supabase } from \"@/app/supabase\";\nimport AsideMainClient from \"../cliente/AsideMainClient\";\n\n// Function to fetch data from Supabase\nasync function fetchData() {\n  const { data: variedades, error: errorVariedades } = await supabase\n    .from(\"variedades\")\n    .select(\"id, variedad\");\n\n  const { data: paises, error: errorPaises } = await supabase\n    .from(\"paises\")\n    .select(\"id, pais\");\n\n  if (errorVariedades || errorPaises) {\n    throw new Error(\"Error fetching data\");\n  }\n\n  return { variedades: variedades as Variedades[], paises: paises as Paises[] };\n}\n\nexport default async function AsideMainServer() {\n  try {\n    const { variedades, paises } = await fetchData();\n    return <AsideMainClient variedades={variedades} paises={paises} />;\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return <div>Error loading data</div>;\n  }\n}\n",
          "CardsMain.tsx": "import { Variedades, Vinos } from \"@/app/lib/Interfaces\";\nimport { supabase } from \"@/app/supabase\";\nimport CarouselSection from \"../cliente/CarouselSection\";\n\nasync function fetchData(params?: string[]): Promise<{\n  vinos: Vinos[];\n  variedades: Variedades[];\n}> {\n  let query = supabase\n    .from(\"vinos\")\n    .select(\n      `id, nombre, precio, variedad, id_unica, url_imagen, variedades(variedad), paises(pais)`\n    );\n\n  if (params && params.length > 0) {\n    query = query.in('variedades.variedad', params);\n  }\n\n  const { data: vinos, error: errorVinos } = await query;\n\n  const { data: variedades, error: errorVariedades } = await supabase\n    .from(\"variedades\")\n    .select(`id, variedad`);\n\n  if (errorVinos || errorVariedades) {\n    throw errorVinos || errorVariedades;\n  }\n\n  return {\n    vinos: vinos as unknown as Vinos[],\n    variedades: variedades as Variedades[],\n  };\n}\n\nfunction groupVinosByVariedad(vinos: Vinos[]): { [key: string]: Vinos[] } {\n  return vinos.reduce((acc: { [key: string]: Vinos[] }, vino: Vinos) => {\n    const variedadId = vino.variedad.toString();\n    if (!acc[variedadId]) {\n      acc[variedadId] = [];\n    }\n    acc[variedadId].push(vino);\n    return acc;\n  }, {});\n}\n\ninterface CardMainProps {\n  params?: string[];\n}\n\nconst CardsMain: React.FC<CardMainProps> = async ({ params = [] }) => {\n  try {\n    const { vinos, variedades } = await fetchData(params);\n    const vinosPorVariedad = groupVinosByVariedad(vinos);\n    return (\n      <main className=\"w-full px-1 pt-3 pb-1 bg-normalColor11 rounded-r-xl\">\n        {Object.keys(vinosPorVariedad).map((variedadId) => {\n          const vinos = vinosPorVariedad[variedadId];\n          const variedad = variedades.find(\n            (v) => v.id === parseInt(variedadId, 10)\n          );\n          return (\n            <CarouselSection\n              key={variedadId}\n              vinos={vinos}\n              variedad={variedad?.variedad || \"Unknown Variety\"}\n            />\n          );\n        })}\n      </main>\n    );\n  } catch (error) {\n    console.error(\"Error fetching data:\", error);\n    return <div>Error loading data</div>;\n  }\n};\n\nexport default CardsMain;\n"
        }
      },
      "models": {
        "supabase.tsx": "export type Json =\n\t| string\n\t| number\n\t| boolean\n\t| null\n\t| { [key: string]: Json | undefined }\n\t| Json[]\n\nexport interface Database {\n\tpublic: {\n\t\tTables: {\n\t\t\tpaises: {\n\t\t\t\tRow: {\n\t\t\t\t\tid: number\n\t\t\t\t\tpais: string | null\n\t\t\t\t}\n\t\t\t\tInsert: {\n\t\t\t\t\tid?: number\n\t\t\t\t\tpais?: string | null\n\t\t\t\t}\n\t\t\t\tUpdate: {\n\t\t\t\t\tid?: number\n\t\t\t\t\tpais?: string | null\n\t\t\t\t}\n\t\t\t\tRelationships: []\n\t\t\t}\n\t\t\tsecciones: {\n\t\t\t\tRow: {\n\t\t\t\t\tactivo: boolean\n\t\t\t\t\tid: number\n\t\t\t\t\tid_unica: number | null\n\t\t\t\t\tnombre: string\n\t\t\t\t}\n\t\t\t\tInsert: {\n\t\t\t\t\tactivo?: boolean\n\t\t\t\t\tid?: number\n\t\t\t\t\tid_unica?: number | null\n\t\t\t\t\tnombre: string\n\t\t\t\t}\n\t\t\t\tUpdate: {\n\t\t\t\t\tactivo?: boolean\n\t\t\t\t\tid?: number\n\t\t\t\t\tid_unica?: number | null\n\t\t\t\t\tnombre?: string\n\t\t\t\t}\n\t\t\t\tRelationships: []\n\t\t\t}\n\t\t\tusuarios: {\n\t\t\t\tRow: {\n\t\t\t\t\tapellido: string | null\n\t\t\t\t\tclave: string | null\n\t\t\t\t\temail: string | null\n\t\t\t\t\tid: number\n\t\t\t\t\tnombre: string | null\n\t\t\t\t\trol: string | null\n\t\t\t\t\tusuario: string | null\n\t\t\t\t}\n\t\t\t\tInsert: {\n\t\t\t\t\tapellido?: string | null\n\t\t\t\t\tclave?: string | null\n\t\t\t\t\temail?: string | null\n\t\t\t\t\tid?: number\n\t\t\t\t\tnombre?: string | null\n\t\t\t\t\trol?: string | null\n\t\t\t\t\tusuario?: string | null\n\t\t\t\t}\n\t\t\t\tUpdate: {\n\t\t\t\t\tapellido?: string | null\n\t\t\t\t\tclave?: string | null\n\t\t\t\t\temail?: string | null\n\t\t\t\t\tid?: number\n\t\t\t\t\tnombre?: string | null\n\t\t\t\t\trol?: string | null\n\t\t\t\t\tusuario?: string | null\n\t\t\t\t}\n\t\t\t\tRelationships: []\n\t\t\t}\n\t\t\tvariedades: {\n\t\t\t\tRow: {\n\t\t\t\t\tid: number\n\t\t\t\t\tpais_origen: number | null\n\t\t\t\t\tvariedad: string | null\n\t\t\t\t}\n\t\t\t\tInsert: {\n\t\t\t\t\tid?: number\n\t\t\t\t\tpais_origen?: number | null\n\t\t\t\t\tvariedad?: string | null\n\t\t\t\t}\n\t\t\t\tUpdate: {\n\t\t\t\t\tid?: number\n\t\t\t\t\tpais_origen?: number | null\n\t\t\t\t\tvariedad?: string | null\n\t\t\t\t}\n\t\t\t\tRelationships: [\n\t\t\t\t\t{\n\t\t\t\t\t\tforeignKeyName: \"variedades_pais_origen_fkey\"\n\t\t\t\t\t\tcolumns: [\"pais_origen\"]\n\t\t\t\t\t\tisOneToOne: false\n\t\t\t\t\t\treferencedRelation: \"paises\"\n\t\t\t\t\t\treferencedColumns: [\"id\"]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t\tvinos: {\n\t\t\t\tRow: {\n\t\t\t\t\tactivo: boolean\n\t\t\t\t\tanada: number | null\n\t\t\t\t\tbodega: string\n\t\t\t\t\tbusqueda: number | null\n\t\t\t\t\tdescripcion: string | null\n\t\t\t\t\tid: number\n\t\t\t\t\tid_categoria: number | null\n\t\t\t\t\tid_unica: number | null\n\t\t\t\t\tmaridaje: string | null\n\t\t\t\t\tnivel_alcohol: number | null\n\t\t\t\t\tnombre: string\n\t\t\t\t\tnotas_cata: string | null\n\t\t\t\t\tpais: number | null\n\t\t\t\t\tprecio: number | null\n\t\t\t\t\tpromocion: boolean\n\t\t\t\t\tregion: string\n\t\t\t\t\tstock: number | null\n\t\t\t\t\ttemperatura_consumo: string | null\n\t\t\t\t\ttipo: string | null\n\t\t\t\t\ttipo_barrica: string | null\n\t\t\t\t\turl_imagen: string | null\n\t\t\t\t\tvariedad: number | null\n\t\t\t\t}\n\t\t\t\tInsert: {\n\t\t\t\t\tactivo?: boolean\n\t\t\t\t\tanada?: number | null\n\t\t\t\t\tbodega: string\n\t\t\t\t\tbusqueda?: number | null\n\t\t\t\t\tdescripcion?: string | null\n\t\t\t\t\tid?: number\n\t\t\t\t\tid_categoria?: number | null\n\t\t\t\t\tid_unica?: number | null\n\t\t\t\t\tmaridaje?: string | null\n\t\t\t\t\tnivel_alcohol?: number | null\n\t\t\t\t\tnombre: string\n\t\t\t\t\tnotas_cata?: string | null\n\t\t\t\t\tpais?: number | null\n\t\t\t\t\tprecio?: number | null\n\t\t\t\t\tpromocion?: boolean\n\t\t\t\t\tregion: string\n\t\t\t\t\tstock?: number | null\n\t\t\t\t\ttemperatura_consumo?: string | null\n\t\t\t\t\ttipo?: string | null\n\t\t\t\t\ttipo_barrica?: string | null\n\t\t\t\t\turl_imagen?: string | null\n\t\t\t\t\tvariedad?: number | null\n\t\t\t\t}\n\t\t\t\tUpdate: {\n\t\t\t\t\tactivo?: boolean\n\t\t\t\t\tanada?: number | null\n\t\t\t\t\tbodega?: string\n\t\t\t\t\tbusqueda?: number | null\n\t\t\t\t\tdescripcion?: string | null\n\t\t\t\t\tid?: number\n\t\t\t\t\tid_categoria?: number | null\n\t\t\t\t\tid_unica?: number | null\n\t\t\t\t\tmaridaje?: string | null\n\t\t\t\t\tnivel_alcohol?: number | null\n\t\t\t\t\tnombre?: string\n\t\t\t\t\tnotas_cata?: string | null\n\t\t\t\t\tpais?: number | null\n\t\t\t\t\tprecio?: number | null\n\t\t\t\t\tpromocion?: boolean\n\t\t\t\t\tregion?: string\n\t\t\t\t\tstock?: number | null\n\t\t\t\t\ttemperatura_consumo?: string | null\n\t\t\t\t\ttipo?: string | null\n\t\t\t\t\ttipo_barrica?: string | null\n\t\t\t\t\turl_imagen?: string | null\n\t\t\t\t\tvariedad?: number | null\n\t\t\t\t}\n\t\t\t\tRelationships: [\n\t\t\t\t\t{\n\t\t\t\t\t\tforeignKeyName: \"vinos_id_categoria_fkey\"\n\t\t\t\t\t\tcolumns: [\"id_categoria\"]\n\t\t\t\t\t\tisOneToOne: false\n\t\t\t\t\t\treferencedRelation: \"secciones\"\n\t\t\t\t\t\treferencedColumns: [\"id\"]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tforeignKeyName: \"vinos_pais_fkey\"\n\t\t\t\t\t\tcolumns: [\"pais\"]\n\t\t\t\t\t\tisOneToOne: false\n\t\t\t\t\t\treferencedRelation: \"paises\"\n\t\t\t\t\t\treferencedColumns: [\"id\"]\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tforeignKeyName: \"vinos_variedad_fkey\"\n\t\t\t\t\t\tcolumns: [\"variedad\"]\n\t\t\t\t\t\tisOneToOne: false\n\t\t\t\t\t\treferencedRelation: \"variedades\"\n\t\t\t\t\t\treferencedColumns: [\"id\"]\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t}\n\t\t}\n\t\tViews: {\n\t\t\t[_ in never]: never\n\t\t}\n\t\tFunctions: {\n\t\t\t[_ in never]: never\n\t\t}\n\t\tEnums: {\n\t\t\t[_ in never]: never\n\t\t}\n\t\tCompositeTypes: {\n\t\t\t[_ in never]: never\n\t\t}\n\t}\n}\n"
      }
    }
  }
}